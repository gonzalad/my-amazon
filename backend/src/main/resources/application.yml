neo4j:
  host: localhost
spring:
  application:
    name: my-amazon
  data:
    neo4j:
      uri: bolt://${neo4j.host}
      username: neo4j
      password: secret
  # datasource used by liquigraph
  datasource:
    url: jdbc:neo4j:http://${neo4j.host}
    driver-class-name: org.neo4j.jdbc.http.HttpDriver
    username: ${spring.data.neo4j.username}
    password: ${spring.data.neo4j.password}
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema.registry.url: http://localhost:8081
    consumer:
      group-id: ${spring.application.name}
      key-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        spring.json.trusted.packages: com.example.myamazon.event,com.example.myamazon.product
        schema.registry.url: http://localhost:8081
        specific.avro.reader: true